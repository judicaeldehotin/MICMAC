// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cGen2DBundleAttach_Deg6.h"


cGen2DBundleAttach_Deg6::cGen2DBundleAttach_Deg6():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("CX",0,28));
   AddIntRef (cIncIntervale("CY",28,56));
   Close(false);
}



void cGen2DBundleAttach_Deg6::ComputeVal()
{
   double tmp0_ = mLocPFixV_x-mLocCentr_x;
   double tmp1_ = (tmp0_)/mLocAmpl;
   double tmp2_ = mLocPFixV_y-mLocCentr_y;
   double tmp3_ = (tmp2_)/mLocAmpl;
   double tmp4_ = ElSquare(tmp1_);
   double tmp5_ = ElSquare(tmp3_);
   double tmp6_ = VCube(tmp1_);
   double tmp7_ = VCube(tmp3_);
   double tmp8_ = VPow4(tmp1_);
   double tmp9_ = VPow4(tmp3_);
   double tmp10_ = VPow5(tmp1_);
   double tmp11_ = VPow5(tmp3_);
   double tmp12_ = VPow6(tmp1_);
   double tmp13_ = VPow6(tmp3_);

  mVal[0] = (mCompCoord[0]+mCompCoord[1]+mCompCoord[2]*(tmp1_)*(tmp3_)+mCompCoord[3]+mCompCoord[4]*(tmp1_)*(tmp3_)+mCompCoord[5]*tmp4_*tmp5_+mCompCoord[6]+mCompCoord[7]*(tmp1_)*(tmp3_)+mCompCoord[8]*tmp4_*tmp5_+mCompCoord[9]*tmp6_*tmp7_+mCompCoord[10]+mCompCoord[11]*(tmp1_)*(tmp3_)+mCompCoord[12]*tmp4_*tmp5_+mCompCoord[13]*tmp6_*tmp7_+mCompCoord[14]*tmp8_*tmp9_+mCompCoord[15]+mCompCoord[16]*(tmp1_)*(tmp3_)+mCompCoord[17]*tmp4_*tmp5_+mCompCoord[18]*tmp6_*tmp7_+mCompCoord[19]*tmp8_*tmp9_+mCompCoord[20]*tmp10_*tmp11_+mCompCoord[21]+mCompCoord[22]*(tmp1_)*(tmp3_)+mCompCoord[23]*tmp4_*tmp5_+mCompCoord[24]*tmp6_*tmp7_+mCompCoord[25]*tmp8_*tmp9_+mCompCoord[26]*tmp10_*tmp11_+mCompCoord[27]*tmp12_*tmp13_)-mLocFixedV_x;

  mVal[1] = (mCompCoord[28]+mCompCoord[29]+mCompCoord[30]*(tmp1_)*(tmp3_)+mCompCoord[31]+mCompCoord[32]*(tmp1_)*(tmp3_)+mCompCoord[33]*tmp4_*tmp5_+mCompCoord[34]+mCompCoord[35]*(tmp1_)*(tmp3_)+mCompCoord[36]*tmp4_*tmp5_+mCompCoord[37]*tmp6_*tmp7_+mCompCoord[38]+mCompCoord[39]*(tmp1_)*(tmp3_)+mCompCoord[40]*tmp4_*tmp5_+mCompCoord[41]*tmp6_*tmp7_+mCompCoord[42]*tmp8_*tmp9_+mCompCoord[43]+mCompCoord[44]*(tmp1_)*(tmp3_)+mCompCoord[45]*tmp4_*tmp5_+mCompCoord[46]*tmp6_*tmp7_+mCompCoord[47]*tmp8_*tmp9_+mCompCoord[48]*tmp10_*tmp11_+mCompCoord[49]+mCompCoord[50]*(tmp1_)*(tmp3_)+mCompCoord[51]*tmp4_*tmp5_+mCompCoord[52]*tmp6_*tmp7_+mCompCoord[53]*tmp8_*tmp9_+mCompCoord[54]*tmp10_*tmp11_+mCompCoord[55]*tmp12_*tmp13_)-mLocFixedV_y;

}


void cGen2DBundleAttach_Deg6::ComputeValDeriv()
{
   double tmp0_ = mLocPFixV_x-mLocCentr_x;
   double tmp1_ = (tmp0_)/mLocAmpl;
   double tmp2_ = mLocPFixV_y-mLocCentr_y;
   double tmp3_ = (tmp2_)/mLocAmpl;
   double tmp4_ = ElSquare(tmp1_);
   double tmp5_ = ElSquare(tmp3_);
   double tmp6_ = VCube(tmp1_);
   double tmp7_ = VCube(tmp3_);
   double tmp8_ = VPow4(tmp1_);
   double tmp9_ = VPow4(tmp3_);
   double tmp10_ = VPow5(tmp1_);
   double tmp11_ = VPow5(tmp3_);
   double tmp12_ = (tmp1_)*(tmp3_);
   double tmp13_ = tmp4_*tmp5_;
   double tmp14_ = tmp6_*tmp7_;
   double tmp15_ = tmp8_*tmp9_;
   double tmp16_ = tmp10_*tmp11_;
   double tmp17_ = VPow6(tmp1_);
   double tmp18_ = VPow6(tmp3_);
   double tmp19_ = tmp17_*tmp18_;

  mVal[0] = (mCompCoord[0]+mCompCoord[1]+mCompCoord[2]*(tmp1_)*(tmp3_)+mCompCoord[3]+mCompCoord[4]*(tmp1_)*(tmp3_)+mCompCoord[5]*tmp4_*tmp5_+mCompCoord[6]+mCompCoord[7]*(tmp1_)*(tmp3_)+mCompCoord[8]*tmp4_*tmp5_+mCompCoord[9]*tmp6_*tmp7_+mCompCoord[10]+mCompCoord[11]*(tmp1_)*(tmp3_)+mCompCoord[12]*tmp4_*tmp5_+mCompCoord[13]*tmp6_*tmp7_+mCompCoord[14]*tmp8_*tmp9_+mCompCoord[15]+mCompCoord[16]*(tmp1_)*(tmp3_)+mCompCoord[17]*tmp4_*tmp5_+mCompCoord[18]*tmp6_*tmp7_+mCompCoord[19]*tmp8_*tmp9_+mCompCoord[20]*tmp10_*tmp11_+mCompCoord[21]+mCompCoord[22]*(tmp1_)*(tmp3_)+mCompCoord[23]*tmp4_*tmp5_+mCompCoord[24]*tmp6_*tmp7_+mCompCoord[25]*tmp8_*tmp9_+mCompCoord[26]*tmp10_*tmp11_+mCompCoord[27]*tmp17_*tmp18_)-mLocFixedV_x;

  mCompDer[0][0] = 1;
  mCompDer[0][1] = 1;
  mCompDer[0][2] = tmp12_;
  mCompDer[0][3] = 1;
  mCompDer[0][4] = tmp12_;
  mCompDer[0][5] = tmp13_;
  mCompDer[0][6] = 1;
  mCompDer[0][7] = tmp12_;
  mCompDer[0][8] = tmp13_;
  mCompDer[0][9] = tmp14_;
  mCompDer[0][10] = 1;
  mCompDer[0][11] = tmp12_;
  mCompDer[0][12] = tmp13_;
  mCompDer[0][13] = tmp14_;
  mCompDer[0][14] = tmp15_;
  mCompDer[0][15] = 1;
  mCompDer[0][16] = tmp12_;
  mCompDer[0][17] = tmp13_;
  mCompDer[0][18] = tmp14_;
  mCompDer[0][19] = tmp15_;
  mCompDer[0][20] = tmp16_;
  mCompDer[0][21] = 1;
  mCompDer[0][22] = tmp12_;
  mCompDer[0][23] = tmp13_;
  mCompDer[0][24] = tmp14_;
  mCompDer[0][25] = tmp15_;
  mCompDer[0][26] = tmp16_;
  mCompDer[0][27] = tmp19_;
  mCompDer[0][28] = 0;
  mCompDer[0][29] = 0;
  mCompDer[0][30] = 0;
  mCompDer[0][31] = 0;
  mCompDer[0][32] = 0;
  mCompDer[0][33] = 0;
  mCompDer[0][34] = 0;
  mCompDer[0][35] = 0;
  mCompDer[0][36] = 0;
  mCompDer[0][37] = 0;
  mCompDer[0][38] = 0;
  mCompDer[0][39] = 0;
  mCompDer[0][40] = 0;
  mCompDer[0][41] = 0;
  mCompDer[0][42] = 0;
  mCompDer[0][43] = 0;
  mCompDer[0][44] = 0;
  mCompDer[0][45] = 0;
  mCompDer[0][46] = 0;
  mCompDer[0][47] = 0;
  mCompDer[0][48] = 0;
  mCompDer[0][49] = 0;
  mCompDer[0][50] = 0;
  mCompDer[0][51] = 0;
  mCompDer[0][52] = 0;
  mCompDer[0][53] = 0;
  mCompDer[0][54] = 0;
  mCompDer[0][55] = 0;
  mVal[1] = (mCompCoord[28]+mCompCoord[29]+mCompCoord[30]*(tmp1_)*(tmp3_)+mCompCoord[31]+mCompCoord[32]*(tmp1_)*(tmp3_)+mCompCoord[33]*tmp4_*tmp5_+mCompCoord[34]+mCompCoord[35]*(tmp1_)*(tmp3_)+mCompCoord[36]*tmp4_*tmp5_+mCompCoord[37]*tmp6_*tmp7_+mCompCoord[38]+mCompCoord[39]*(tmp1_)*(tmp3_)+mCompCoord[40]*tmp4_*tmp5_+mCompCoord[41]*tmp6_*tmp7_+mCompCoord[42]*tmp8_*tmp9_+mCompCoord[43]+mCompCoord[44]*(tmp1_)*(tmp3_)+mCompCoord[45]*tmp4_*tmp5_+mCompCoord[46]*tmp6_*tmp7_+mCompCoord[47]*tmp8_*tmp9_+mCompCoord[48]*tmp10_*tmp11_+mCompCoord[49]+mCompCoord[50]*(tmp1_)*(tmp3_)+mCompCoord[51]*tmp4_*tmp5_+mCompCoord[52]*tmp6_*tmp7_+mCompCoord[53]*tmp8_*tmp9_+mCompCoord[54]*tmp10_*tmp11_+mCompCoord[55]*tmp17_*tmp18_)-mLocFixedV_y;

  mCompDer[1][0] = 0;
  mCompDer[1][1] = 0;
  mCompDer[1][2] = 0;
  mCompDer[1][3] = 0;
  mCompDer[1][4] = 0;
  mCompDer[1][5] = 0;
  mCompDer[1][6] = 0;
  mCompDer[1][7] = 0;
  mCompDer[1][8] = 0;
  mCompDer[1][9] = 0;
  mCompDer[1][10] = 0;
  mCompDer[1][11] = 0;
  mCompDer[1][12] = 0;
  mCompDer[1][13] = 0;
  mCompDer[1][14] = 0;
  mCompDer[1][15] = 0;
  mCompDer[1][16] = 0;
  mCompDer[1][17] = 0;
  mCompDer[1][18] = 0;
  mCompDer[1][19] = 0;
  mCompDer[1][20] = 0;
  mCompDer[1][21] = 0;
  mCompDer[1][22] = 0;
  mCompDer[1][23] = 0;
  mCompDer[1][24] = 0;
  mCompDer[1][25] = 0;
  mCompDer[1][26] = 0;
  mCompDer[1][27] = 0;
  mCompDer[1][28] = 1;
  mCompDer[1][29] = 1;
  mCompDer[1][30] = tmp12_;
  mCompDer[1][31] = 1;
  mCompDer[1][32] = tmp12_;
  mCompDer[1][33] = tmp13_;
  mCompDer[1][34] = 1;
  mCompDer[1][35] = tmp12_;
  mCompDer[1][36] = tmp13_;
  mCompDer[1][37] = tmp14_;
  mCompDer[1][38] = 1;
  mCompDer[1][39] = tmp12_;
  mCompDer[1][40] = tmp13_;
  mCompDer[1][41] = tmp14_;
  mCompDer[1][42] = tmp15_;
  mCompDer[1][43] = 1;
  mCompDer[1][44] = tmp12_;
  mCompDer[1][45] = tmp13_;
  mCompDer[1][46] = tmp14_;
  mCompDer[1][47] = tmp15_;
  mCompDer[1][48] = tmp16_;
  mCompDer[1][49] = 1;
  mCompDer[1][50] = tmp12_;
  mCompDer[1][51] = tmp13_;
  mCompDer[1][52] = tmp14_;
  mCompDer[1][53] = tmp15_;
  mCompDer[1][54] = tmp16_;
  mCompDer[1][55] = tmp19_;
}


void cGen2DBundleAttach_Deg6::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cGen2DBundleAttach_Deg6 Has no Der Sec");
}

void cGen2DBundleAttach_Deg6::SetAmpl(double aVal){ mLocAmpl = aVal;}
void cGen2DBundleAttach_Deg6::SetCentr_x(double aVal){ mLocCentr_x = aVal;}
void cGen2DBundleAttach_Deg6::SetCentr_y(double aVal){ mLocCentr_y = aVal;}
void cGen2DBundleAttach_Deg6::SetFixedV_x(double aVal){ mLocFixedV_x = aVal;}
void cGen2DBundleAttach_Deg6::SetFixedV_y(double aVal){ mLocFixedV_y = aVal;}
void cGen2DBundleAttach_Deg6::SetPFixV_x(double aVal){ mLocPFixV_x = aVal;}
void cGen2DBundleAttach_Deg6::SetPFixV_y(double aVal){ mLocPFixV_y = aVal;}



double * cGen2DBundleAttach_Deg6::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "Ampl") return & mLocAmpl;
   if (aName == "Centr_x") return & mLocCentr_x;
   if (aName == "Centr_y") return & mLocCentr_y;
   if (aName == "FixedV_x") return & mLocFixedV_x;
   if (aName == "FixedV_y") return & mLocFixedV_y;
   if (aName == "PFixV_x") return & mLocPFixV_x;
   if (aName == "PFixV_y") return & mLocPFixV_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cGen2DBundleAttach_Deg6::mTheAuto("cGen2DBundleAttach_Deg6",cGen2DBundleAttach_Deg6::Alloc);


cElCompiledFonc *  cGen2DBundleAttach_Deg6::Alloc()
{  return new cGen2DBundleAttach_Deg6();
}


