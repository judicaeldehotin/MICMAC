// File Automatically generated by eLiSe
#include "StdAfx.h"
#include "cGen2DBundleEgProj_Deg1.h"


cGen2DBundleEgProj_Deg1::cGen2DBundleEgProj_Deg1():
    cElCompiledFonc(2)
{
   AddIntRef (cIncIntervale("CX",3,6));
   AddIntRef (cIncIntervale("CY",6,9));
   AddIntRef (cIncIntervale("Tmp_PTer",0,3));
   Close(false);
}



void cGen2DBundleEgProj_Deg1::ComputeVal()
{
   double tmp0_ = mCompCoord[0];
   double tmp1_ = tmp0_-mLocPTerInit_x;
   double tmp2_ = mLocGradX_x*(tmp1_);
   double tmp3_ = mLocProjInit_x+tmp2_;
   double tmp4_ = mCompCoord[1];
   double tmp5_ = tmp4_-mLocPTerInit_y;
   double tmp6_ = mLocGradY_x*(tmp5_);
   double tmp7_ = tmp3_+tmp6_;
   double tmp8_ = mCompCoord[2];
   double tmp9_ = tmp8_-mLocPTerInit_z;
   double tmp10_ = mLocGradZ_x*(tmp9_);
   double tmp11_ = tmp7_+tmp10_;
   double tmp12_ = mLocGradX_y*(tmp1_);
   double tmp13_ = mLocProjInit_y+tmp12_;
   double tmp14_ = mLocGradY_y*(tmp5_);
   double tmp15_ = tmp13_+tmp14_;
   double tmp16_ = mLocGradZ_y*(tmp9_);
   double tmp17_ = tmp15_+tmp16_;
   double tmp18_ = (tmp11_)-mLocCentr_x;
   double tmp19_ = (tmp18_)/mLocAmpl;
   double tmp20_ = (tmp17_)-mLocCentr_y;
   double tmp21_ = (tmp20_)/mLocAmpl;

  mVal[0] = (tmp11_+mCompCoord[3]+mCompCoord[4]+mCompCoord[5]*(tmp19_)*(tmp21_))-mLocPIm_x;

  mVal[1] = (tmp17_+mCompCoord[6]+mCompCoord[7]+mCompCoord[8]*(tmp19_)*(tmp21_))-mLocPIm_y;

}


void cGen2DBundleEgProj_Deg1::ComputeValDeriv()
{
   double tmp0_ = mCompCoord[0];
   double tmp1_ = tmp0_-mLocPTerInit_x;
   double tmp2_ = mLocGradX_x*(tmp1_);
   double tmp3_ = mLocProjInit_x+tmp2_;
   double tmp4_ = mCompCoord[1];
   double tmp5_ = tmp4_-mLocPTerInit_y;
   double tmp6_ = mLocGradY_x*(tmp5_);
   double tmp7_ = tmp3_+tmp6_;
   double tmp8_ = mCompCoord[2];
   double tmp9_ = tmp8_-mLocPTerInit_z;
   double tmp10_ = mLocGradZ_x*(tmp9_);
   double tmp11_ = tmp7_+tmp10_;
   double tmp12_ = mCompCoord[5];
   double tmp13_ = mLocGradX_y*(tmp1_);
   double tmp14_ = mLocProjInit_y+tmp13_;
   double tmp15_ = mLocGradY_y*(tmp5_);
   double tmp16_ = tmp14_+tmp15_;
   double tmp17_ = mLocGradZ_y*(tmp9_);
   double tmp18_ = tmp16_+tmp17_;
   double tmp19_ = (tmp18_)-mLocCentr_y;
   double tmp20_ = (tmp19_)/mLocAmpl;
   double tmp21_ = ElSquare(mLocAmpl);
   double tmp22_ = (tmp11_)-mLocCentr_x;
   double tmp23_ = (tmp22_)/mLocAmpl;
   double tmp24_ = tmp12_*(tmp23_);
   double tmp25_ = mLocGradX_x*mLocAmpl;
   double tmp26_ = (tmp25_)/tmp21_;
   double tmp27_ = mCompCoord[8];
   double tmp28_ = mLocGradX_y*mLocAmpl;
   double tmp29_ = (tmp28_)/tmp21_;
   double tmp30_ = tmp27_*(tmp23_);
   double tmp31_ = mLocGradY_x*mLocAmpl;
   double tmp32_ = (tmp31_)/tmp21_;
   double tmp33_ = mLocGradY_y*mLocAmpl;
   double tmp34_ = (tmp33_)/tmp21_;
   double tmp35_ = mLocGradZ_x*mLocAmpl;
   double tmp36_ = (tmp35_)/tmp21_;
   double tmp37_ = mLocGradZ_y*mLocAmpl;
   double tmp38_ = (tmp37_)/tmp21_;
   double tmp39_ = (tmp23_)*(tmp20_);

  mVal[0] = (tmp11_+mCompCoord[3]+mCompCoord[4]+tmp24_*(tmp20_))-mLocPIm_x;

  mCompDer[0][0] = mLocGradX_x+(tmp26_)*tmp12_*(tmp20_)+(tmp29_)*tmp24_;
  mCompDer[0][1] = mLocGradY_x+(tmp32_)*tmp12_*(tmp20_)+(tmp34_)*tmp24_;
  mCompDer[0][2] = mLocGradZ_x+(tmp36_)*tmp12_*(tmp20_)+(tmp38_)*tmp24_;
  mCompDer[0][3] = 1;
  mCompDer[0][4] = 1;
  mCompDer[0][5] = tmp39_;
  mCompDer[0][6] = 0;
  mCompDer[0][7] = 0;
  mCompDer[0][8] = 0;
  mVal[1] = (tmp18_+mCompCoord[6]+mCompCoord[7]+tmp30_*(tmp20_))-mLocPIm_y;

  mCompDer[1][0] = mLocGradX_y+(tmp26_)*tmp27_*(tmp20_)+(tmp29_)*tmp30_;
  mCompDer[1][1] = mLocGradY_y+(tmp32_)*tmp27_*(tmp20_)+(tmp34_)*tmp30_;
  mCompDer[1][2] = mLocGradZ_y+(tmp36_)*tmp27_*(tmp20_)+(tmp38_)*tmp30_;
  mCompDer[1][3] = 0;
  mCompDer[1][4] = 0;
  mCompDer[1][5] = 0;
  mCompDer[1][6] = 1;
  mCompDer[1][7] = 1;
  mCompDer[1][8] = tmp39_;
}


void cGen2DBundleEgProj_Deg1::ComputeValDerivHessian()
{
  ELISE_ASSERT(false,"Foncteur cGen2DBundleEgProj_Deg1 Has no Der Sec");
}

void cGen2DBundleEgProj_Deg1::SetAmpl(double aVal){ mLocAmpl = aVal;}
void cGen2DBundleEgProj_Deg1::SetCentr_x(double aVal){ mLocCentr_x = aVal;}
void cGen2DBundleEgProj_Deg1::SetCentr_y(double aVal){ mLocCentr_y = aVal;}
void cGen2DBundleEgProj_Deg1::SetGradX_x(double aVal){ mLocGradX_x = aVal;}
void cGen2DBundleEgProj_Deg1::SetGradX_y(double aVal){ mLocGradX_y = aVal;}
void cGen2DBundleEgProj_Deg1::SetGradY_x(double aVal){ mLocGradY_x = aVal;}
void cGen2DBundleEgProj_Deg1::SetGradY_y(double aVal){ mLocGradY_y = aVal;}
void cGen2DBundleEgProj_Deg1::SetGradZ_x(double aVal){ mLocGradZ_x = aVal;}
void cGen2DBundleEgProj_Deg1::SetGradZ_y(double aVal){ mLocGradZ_y = aVal;}
void cGen2DBundleEgProj_Deg1::SetPIm_x(double aVal){ mLocPIm_x = aVal;}
void cGen2DBundleEgProj_Deg1::SetPIm_y(double aVal){ mLocPIm_y = aVal;}
void cGen2DBundleEgProj_Deg1::SetPTerInit_x(double aVal){ mLocPTerInit_x = aVal;}
void cGen2DBundleEgProj_Deg1::SetPTerInit_y(double aVal){ mLocPTerInit_y = aVal;}
void cGen2DBundleEgProj_Deg1::SetPTerInit_z(double aVal){ mLocPTerInit_z = aVal;}
void cGen2DBundleEgProj_Deg1::SetProjInit_x(double aVal){ mLocProjInit_x = aVal;}
void cGen2DBundleEgProj_Deg1::SetProjInit_y(double aVal){ mLocProjInit_y = aVal;}



double * cGen2DBundleEgProj_Deg1::AdrVarLocFromString(const std::string & aName)
{
   if (aName == "Ampl") return & mLocAmpl;
   if (aName == "Centr_x") return & mLocCentr_x;
   if (aName == "Centr_y") return & mLocCentr_y;
   if (aName == "GradX_x") return & mLocGradX_x;
   if (aName == "GradX_y") return & mLocGradX_y;
   if (aName == "GradY_x") return & mLocGradY_x;
   if (aName == "GradY_y") return & mLocGradY_y;
   if (aName == "GradZ_x") return & mLocGradZ_x;
   if (aName == "GradZ_y") return & mLocGradZ_y;
   if (aName == "PIm_x") return & mLocPIm_x;
   if (aName == "PIm_y") return & mLocPIm_y;
   if (aName == "PTerInit_x") return & mLocPTerInit_x;
   if (aName == "PTerInit_y") return & mLocPTerInit_y;
   if (aName == "PTerInit_z") return & mLocPTerInit_z;
   if (aName == "ProjInit_x") return & mLocProjInit_x;
   if (aName == "ProjInit_y") return & mLocProjInit_y;
   return 0;
}


cElCompiledFonc::cAutoAddEntry cGen2DBundleEgProj_Deg1::mTheAuto("cGen2DBundleEgProj_Deg1",cGen2DBundleEgProj_Deg1::Alloc);


cElCompiledFonc *  cGen2DBundleEgProj_Deg1::Alloc()
{  return new cGen2DBundleEgProj_Deg1();
}


