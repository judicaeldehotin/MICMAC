Prérequis

	Micmac nécessite pour fonctionner la présence des outils suivants sur votre système :
		- make (www.gnu.org/software/make)
			Pour la gestion de tâches en parallèle.
		- convert, d'ImageMagick (www.imagemagick.org)
			Pour la conversion de format des images.
		- exiftool (www.sno.phy.queensu.ca/~phil/exiftool) et exiv2 (www.exiv2.org)
			Pour la lecture/écriture des méta-données image.
			
	Vous pouvez vérifier que Micmac trouve correctement les programmes ci-dessus grâce à la commande
		bin/mm3d CheckDependencies (si vous vous trouvez dans le répertoire de Micmac)
		
	La mention "NOT FOUND" indique que l'exécutable correspondant n'est pas présent ou qu'il n'a pu être trouvé. Dans ce cas,
vérifiez que les chemins d'accès sont bien inclus dans la variable d'environnement PATH.
	Il convient de noter que quelle que soit la valeur de la variable PATH, le répertoire "binaire-aux" est examiné lors de la
recherche des outils externes mais qu'un outil trouvé ailleurs aura la prépondérance.

	Sous Windows
	
		Il est nécessaire que l'une des variables d'environnement WINDIR ou SystemRoot soit renseignée avec le nom complet du 
répertoire d'installation de Windows (généralement C:\Windows), ceci afin d'éviter la confusion entre convert.exe d'ImageMagick et
celui de Windows.
		Par mesure de commodité, l'archive des sources, ainsi que l'archive des binaires précompilés pour Windows, contient une
version des utilitaires prérequis. En effet, comme cet OS ne dispose pas d'un service d'installation et de mise à jour de paquets,
il peut donc être fastidieux de récupérer les exécutables nécessaires.

Compilation à partir de l'archive des sources

	Prérequis
	
		En plus des prérequis précédent, la compilation des sources nécessite l'installation de cmake (www.cmake.org) ainsi que des
fichiers d'en-tête de X11 pour Linux et MacOS X.
		Le nom du paquet Linux des headers X11 est généralement libx11-dev.
		Sous Windows, les outils graphiques de saisie ne sont pas générés.

	Sous Linux / MacOS X

		- décompressez l'archive :
			tar xvf micmac_source_revXXX.tar.gz
		- entrez dans le répertoire "micmac"
			cd micmac
		- créez un répertoire pour accueillir les fichiers intermédiaires générés par la compilation et placez vous à l'intérieur :
			mkdir build
			cd build
		- lancez la génération des makefiles
			cmake ../
		- lancez la compilation :
			make install -j"nombre de coeurs"

	Sous Windows avec Visual C++
	
		Les premières étapes sont semblables à la compilation sous linux mais la procédure varie après l'appel à cmake.
		Cmake génère une solution micmac.sln, ouvrez-là avec visual c++ et générez le projet "INSTALL".
		Attention à passer la configuration sur "Release", les exécutables en mode "Debug" sont bien plus lents à l'exécution.
		Si vous construisez la solution complète et non le projet "INSTALL", les fichiers ne seront pas copiés dans le répertoire "bin".

Tester l'installation

	Sur le site logiciels.ign.fr (section image->Micmac->téléchargement) se trouve également disponible en téléchargement le jeu de 
test Boudha_dataset.zip.
	Le script et les données qu'il contient, permettent de tester si votre installation de Micmac fonctionne correctement. Pour lancer
le script, si vous vous trouvez dans le répertoire "Boudha" issu du fichier zip, entrez une commande de la forme :
		./boudha_test.sh mon_micmac_bin/ 
	où mon_micmac_bin est le chemin (absolu ou relatif) du répertoire "bin" de votre installation. Par exemple :
		./boudha_test.sh ../micmac/bin/
	Attention, le nom du répertoire doit impérativement finir par un '/' terminal (ou un '\' sous Windows, les deux formes sont possibles).
	Lorsque le calcul sera terminé, vous pourrez vérifier le résultat grâce aux trois fichier "ply" contenus dans le répertoire MEC-6-Im.
	Il s'agit du même exemple Boudha que dans la documentation. Editez les fichiers PLY à l'aide d'un viewer comme meshlab pour vérifier que
les résultats sont cohérents.
	